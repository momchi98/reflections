When would you want to use a remote repository rather than keeping all your work
local?

    Of course! Remote repositories give a lot more flexibility and a simple way
    to work with other people on the same project.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Maybe because there can be times when I don't want to pull my changes to
    the local repository at that exact moment or at all. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches in Git are simply a lightweight movable pointers to one of the
    commits. The default branch name in Git is master. As you initially make
    commits, youâ€™re given a master branch that points to the last commit you
    made. Every time you commit, it moves forward automatically.

    Clones are copies of an existing repository (local or remote) into a new
    directory.

    Forks are a copies of a repository. Forking a repository allows you to
    freely experiment with changes without affecting the original project.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Having a local copy of the last known state of the remote makes you able to
    work over the last changes made by other collaborators in the project

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Collaboration without Git would be realy hard for a programmer like me.
    While GitHub could be replaced with BitBucket or another source code hosting
    service, Git can hardly be replaced with other VCS. I can't say what would be
    easier, and what would be harder with other source code hosting service and
    VCS because I never used any others, but completely without them would be realy
    hard, slow and prone to many, many errors.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
